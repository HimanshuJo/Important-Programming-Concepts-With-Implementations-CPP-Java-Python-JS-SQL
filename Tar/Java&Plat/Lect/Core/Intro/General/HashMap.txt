
Java HashMap store items in Key/value pair, and we can access them by an index of another type (e.g. a String)

One object is used as a key (index) to another object (value)

    It can store different types e.g. String, Integer values or the same type like

        String keys and String values

-------

Example:

    Create a HashMap object called capitalCities that will store String keys and String values

        import java.util.HashMap;  // import the HashMap class

        HashMap<String, String> capitalCities =  new HashMap<>();

-------

The HashMap class has many useful methods.

    For example, to add items to it, use the put() method

    Example:

        import java.util.HashMap;

        public class MyClass {
            public static void main(String[] args) {
                HashMap<String, String> capitalCities = new HashMap<>();

                // Add keys and values (Country, City)

                capitalCities.put("England", "London");
                capitalCities.put("Germany", "Berlin");
            }
        }

-------

Access an Item:

    To access a value in the HashMap, use the get() method and refer to its key

    Example:

        capitalCities.get("England");

-------

Remove an Item:

    To remove an item, we use the remove() method and refer to the key

    Example:

        capitalCities.remove("England");

-------

Remove all the Items:

    To remove all the item, we use the clear() method

    Example:

        capitalCities.clear();

-------

To find out how many items there are in the HashMap, we use the size method

    capitalCities.size();

-------

Loop through a HashMap

    Looping through the HashMap with a for-each loop

    Note:

        We can use the keySet() method if we only want the keys, and use the values() method if we want the values:

        for(String keys: capitalCities.keySet()) {
            System.out.println(i);
        }

        -------

        for(String values: capitalCities.values()) {
            System.out.println(values)
        }

-------

Get keys and values in a HashMap:

    for(String keys: capitalCities.keySet()) {
        System.out.println("key" + i + "value" + capitalCities.get(i));
    }

-------

Other Types:

    Keys and values in a HashMap are actually objects.

    In the above example we used the objects of type "String"

        String in Java is an object (not a primitive type)

        To use other types, such as int, we must specify an equivalent wrapper class

            for int --> Integer

            for boolean  --> Boolean

            for char  --> Character

            for double  --> Double

-------

Creating a HashMap object called 'people' that will store String keys and Integer values:

    // Import the HashMap class

    import java.util.HashMap;

    public class MyClass {
        public static void main(String[] args) {

            // Create a HashMap object called people

            HashMap<String, Integer> people = new HashMap<>();

            // Add keys and values (Name, Age)

            people.put("John", 32);
            people.put("Steve", 30);
            people.put("Angie", 33);

            for (String keys: people.keySet()) {
                System.out.println("key: " + i + "value: " + people.get(i));
            }
        }
    }
