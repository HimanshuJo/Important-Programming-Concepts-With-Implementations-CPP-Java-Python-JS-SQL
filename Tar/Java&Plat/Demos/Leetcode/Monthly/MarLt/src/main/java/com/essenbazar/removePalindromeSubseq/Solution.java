/*
Project for solving some Mar_21 leetcode problems
 */
package com.essenbazar.removePalindromeSubseq;

/**
 *
 * @author himanshu
 */

/*

Given a string s consisting only of letters 'a' and 'b'.
In a single step you can remove one palindromic subsequence from s.

Return the minimum number of steps to make the given string empty.

A string is a subsequence of a given string, if it is generated by deleting some characters of a
given string without changing its order.

A string is called palindrome if is one that reads the same backward as well as forward.

 

Example 1:

Input: s = "ababa"
Output: 1
Explanation: String is already palindrome


*/


class Solution {
    public int removePalindromeSub(String s) {
        if (s.isBlank()) return 0;
        
        if (isPalindrome(s)) return 1;
        
        return 2;
    }
    
    private boolean isPalindrome(String s) {
        int left = 0;
        int right = s.length() - 1;
        
        while (left < right) {
            if (s.charAt(left) != s.charAt(right))
                return false;
            left++;
            right--;
        }
        
        return true;
        
    }
}