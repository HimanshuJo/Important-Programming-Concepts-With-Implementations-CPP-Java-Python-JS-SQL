Assigning a character to an std::string at an index will produce the correct result, 

for example:

	#include <iostream>
	int main() {
	    std::string s = "abc";
	    s[1] = 'a';
	    std::cout << s;
	}

	which prints aac. 

	The drawback is you risk accidentally writing to un-assigned memory if string s is blankstring or you write too far. 
		C++ will gladly write off the end of the string, and that causes undefined behavior.

-------

A safer way to do this would be to use string::replace

For example

	#include <iostream> 
	int main() { 
	    std::string s = "What kind of king do you think you'll be?"; 
	    std::string s2 = "A good king?"; 
	    // parameters of replace {pos, len, str_repl} 
	    s.replace(40, 1, s2); 
	    std::cout << s;   
	    //prints: What kind of king do you think you'll beA good king?
	}
