std::string::c_str

Get C string equivalent
Returns a pointer to an array that contains a null-terminated sequence of characters (i.e., a C-string) representing the current value of the string object.

This array includes the same sequence of characters that make up the value of the string object plus an additional terminating null-character ('\0') at the end.

-------

// strings and c-strings
#include <iostream>
#include <cstring>
#include <string>

int main ()
{
  std::string str ("Please split this sentence into tokens");

  char * cstr = new char [str.length()+1];
  std::strcpy (cstr, str.c_str());

  // cstr now contains a c-string copy of str

  char * p = std::strtok (cstr," ");
  while (p!=0)
  {
    std::cout << p << '\n';
    p = std::strtok(NULL," ");
  }

  delete[] cstr;
  return 0;
}

Output:
Please
split
this
sentence
into
tokens

-------

// Get contents of cstr

#include<string>
#include<iostream>
#include<cstring>
using namespace std;

int main(){
  string str="- This, a sample string.";
  char *cstr=new char[str.length()+1];
  strcpy(cstr, str.c_str());
  char *ptr=cstr;
  while(*ptr!='\0'){
    cout<<(*ptr)<<endl;
    *ptr++;
  }
}

Output:

-
 
T
h
i
s
,
 a
 
s
a
m
p
l
e
 
s
t
r
i
n
g
.