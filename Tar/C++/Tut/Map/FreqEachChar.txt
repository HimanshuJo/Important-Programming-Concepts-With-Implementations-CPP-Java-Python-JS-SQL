
Given a vector vec, the task is to find the frequency of each element of vec using a map.

Examples: 
 

    Input: vec = {1, 2, 2, 3, 1, 4, 4, 5} 
    
    Output: 
	    
	    1 2 
	    2 2 
	    3 1 
	    4 2 
	    5 1

    Explanation: 
    	1 has occurred 2 times 
    	2 has occurred 2 times 
    	3 has occurred 1 times 
    	4 has occurred 2 times 
    	5 has occurred 1 times 

    -------

    Input: v1 = {6, 7, 8, 6, 4, 1} 
	
	Output: 
	    
	    1 1 
	    4 1 
	    6 2 
	    7 1 
	    8 1 
    
    Explanation: 
    	1 has occurred 1 times 
    	4 has occurred 1 times 
    	6 has occurred 2 times 
    	7 has occurred 1 times 
    	8 has occurred 1 times

-------

Approach:

	We can find the frequency of elements in a vector using given four steps efficiently: 

    	Traverse the elements of the given vector vec.
    	
    	check whether the current element is present in the map or not.
    	
    	If it is present, then update the frequency of the current element, else insert the element with frequency 1 as shown below:
    	
    	Traverse the map and print the frequency of each element stored as a mapped value.

-------

#include <bits/stdc++.h>
using namespace std;

void printFrequency(vector<int> vec)
{
    map<int, int> map;
    int sizeVec = vec.size();
    for (int i = 0; i < sizeVec; ++i)
    {
        // If the current element is not found then insert current element with the frequency 1
        if (map.find(vec[i]) == map.end())
        {
            map[vec[i]] = 1;
        }
        else
        {
            map[vec[i]]++;
        }
    }
    // Traversing map to print the frequency
    for (auto &it : map)
    {
        cout << it.first << ' ' << it.second << "\n";
    }
}

int main()
{
    vector<int> vec = {1, 2, 2, 3, 1, 4, 4, 5};
    printFrequency(vec);
    return 0;
}

Output: 

1 2
2 2
3 1
4 2
5 1

------

Complexity Analysis: 
	Time Complexity: O(n log n) 
	
	For a given vector of size n, we are iterating over it once and the time complexity for 
		searching elements in the map is O(log n). 

		So the time complexity is O(n log n) 

Space Complexity: O(n) 
	
	For a given vector of size n, we are using an extra map which can have maximum of n key-values,
		so space complexity is O(n)